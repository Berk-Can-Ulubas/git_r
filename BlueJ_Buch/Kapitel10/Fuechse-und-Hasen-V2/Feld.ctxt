#BlueJ class context
comment0.params=tiefe\ breite
comment0.target=Feld(int,\ int)
comment0.text=\nErzeuge\ ein\ Feld\ mit\ den\ angegebenen\ Dimensionen.\n@param\ tiefe\ die\ Tiefe\ des\ Feldes.\n@param\ breite\ die\ Breite\ des\ Feldes.\n\n
comment1.target=void\ raeumen()
comment1.text=\nR\u00E4ume\ das\ Feld.\n\n
comment10.params=position
comment10.target=List<Position>\ nachbarpositionen(Position)
comment10.text=\nLiefert\ eine\ gemischte\ Liste\ von\ Nachbarpositionen\nzu\ der\ gegebenen\ Position.\ Diese\ Liste\ enth\u00E4lt\ nicht\ die\ gegebene\ \nPosition\ selbst.\ Alle\ Positionen\ liegen\ innerhalb\ des\ Feldes.\n@param\ position\ die\ Position,\ f\u00FCr\ die\ Nachbarpositionen\ zu\ liefern\ sind.\n@return\ eine\ Liste\ der\ Nachbarpositionen\ zur\ gegebenen\ Position.\n\n
comment11.target=int\ gibTiefe()
comment11.text=\nLiefere\ die\ Tiefe\ dieses\ Feldes.\n@return\ die\ Tiefe\ dieses\ Feldes.\n\n
comment12.target=int\ gibBreite()
comment12.text=\nLiefere\ die\ Breite\ dieses\ Feldes.\n@return\ die\ Breite\ dieses\ Feldes.\n\n
comment2.params=position
comment2.target=void\ raeumen(Position)
comment2.text=\nR\u00E4ume\ die\ gegebene\ Position.\n@param\ position\ die\ zu\ leerende\ Position\n\n
comment3.params=tier\ zeile\ spalte
comment3.target=void\ platziere(Object,\ int,\ int)
comment3.text=\nPlatziere\ das\ gegebene\ Tier\ an\ der\ angegebenen\ Position.\nWenn\ an\ der\ Position\ bereits\ ein\ Tier\ eingetragen\ ist,\ngeht\ es\ verloren.\n@param\ tier\ das\ Tier\ das\ platziert\ werden\ soll.\n@param\ zeile\ die\ Zeilenkoordinate\ der\ Position.\n@param\ spalte\ die\ Spaltenkoordinate\ der\ Position.\n\n
comment4.params=tier\ position
comment4.target=void\ platziere(Object,\ Position)
comment4.text=\nPlatziere\ das\ gegebene\ Tier\ an\ der\ angegebenen\ Position.\nWenn\ an\ der\ Position\ bereits\ ein\ Tier\ eingetragen\ ist,\ngeht\ es\ verloren.\n@param\ tier\ das\ Tier,\ das\ platziert\ werden\ soll.\n@param\ position\ die\ Position,\ an\ der\ das\ Tier\ platziert\ werden\ soll.\n\n
comment5.params=position
comment5.target=Object\ gibObjektAn(Position)
comment5.text=\nLiefere\ das\ Tier\ an\ der\ angegebenen\ Position,\ falls\ vorhanden.\n@param\ position\ die\ gew\u00FCnschte\ Position.\n@return\ das\ Tier\ an\ der\ angegebenen\ Position\ oder\ null,\ wenn\ndort\ kein\ Tier\ eingetragen\ ist.\n\n
comment6.params=zeile\ spalte
comment6.target=Object\ gibObjektAn(int,\ int)
comment6.text=\nLiefere\ das\ Tier\ an\ der\ angegebenen\ Position,\ falls\ vorhanden.\n@param\ zeile\ die\ gew\u00FCnschte\ Zeile.\n@param\ spalte\ die\ gew\u00FCnschte\ Spalte.\n@return\ das\ Tier\ an\ der\ angegebenen\ Position\ oder\ null,\ wenn\ndort\ kein\ Tier\ eingetragen\ ist.\n\n
comment7.params=position
comment7.target=Position\ zufaelligeNachbarposition(Position)
comment7.text=\nW\u00E4hle\ zuf\u00E4llig\ eine\ der\ Positionen,\ die\ an\ die\ gegebene\ Position\nangrenzen,\ oder\ die\ gegebene\ Position\ selbst.\nDie\ gelieferte\ Position\ liegt\ innerhalb\ der\ g\u00FCltigen\ Grenzen\ndieses\ Feldes.\n@param\ position\ die\ Position,\ von\ der\ ein\ Nachbar\ zu\ w\u00E4hlen\ ist.\n@return\ eine\ g\u00FCltige\ Position\ innerhalb\ dieses\ Feldes.\ Das\ kann\nauch\ die\ gegebene\ Position\ selbst\ sein.\n\n
comment8.params=position
comment8.target=List<Position>\ freieNachbarpositionen(Position)
comment8.text=\nLiefert\ eine\ gemischte\ Liste\ von\ freien\ Nachbarposition.\n@param\ position\ die\ Position,\ f\u00FCr\ die\ Nachbarpositionen\nzu\ liefern\ ist.\n@return\ eine\ Liste\ freier\ Nachbarpositionen.\n\n
comment9.params=position
comment9.target=Position\ freieNachbarposition(Position)
comment9.text=\nVersuche,\ eine\ freie\ Nachbarposition\ zur\ gegebenen\ Position\ zu\nfinden.\ Wenn\ es\ keine\ gibt,\ liefere\ null.\nDie\ gelieferte\ Position\ liegt\ innerhalb\ der\ Feldgrenzen.\n@param\ position\ die\ Position,\ f\u00FCr\ die\ eine\ Nachbarposition\nzu\ liefern\ ist.\n@return\ eine\ g\u00FCltige\ Position\ innerhalb\ der\ Feldgrenzen.\ \n\n
numComments=13
